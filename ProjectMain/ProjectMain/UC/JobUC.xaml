<UserControl x:Name="JobUCpopup"
    x:Class="ProjectMain.UC.JobUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Local="clr-namespace:ProjectMain.Enums"
             xmlns:Con="clr-namespace:ProjectMain"
             xmlns:User="clr-namespace:ProjectMain.UC"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="dataFromEnum" 
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type  TypeName="Local:PriorityLevel"/>
            </ObjectDataProvider.MethodParameters>
            
        </ObjectDataProvider>
        <Con:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <!--<ObjectDataProvider x:Key="DataFromDB" MethodName="ToString" ObjectType="{x:Type System:Object}">
            
        </ObjectDataProvider>-->
    </UserControl.Resources>
    <UserControl.Style>
        <Style>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CloseSignal}" Value="true">
                    <Setter Property="User:WindowCloseBehaviour.Close" Value="true" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
        <Border BorderThickness="2" Background="LightGray">
            <Grid x:Name="JobDesc">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <TextBox Text="Enter a JobID"
                    FontStyle="Italic"
                    Foreground="LightGray"
                    Focusable="False"/>
                <TextBox x:Name="JobIDInput"
                    Text="{Binding Path=JobId, UpdateSourceTrigger=PropertyChanged}"
                    Focusable="True">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Opacity"
                          Value="1" />
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused"
                                         Value="False" />
                                        <Condition Property="Text"
                                         Value="" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity"
                                  Value="0" />
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <!--<Label Grid.Row="1" Grid.Column="0">Job Title</Label>
        <TextBox Grid.Row="1" Grid.Column="1" x:Name="JobDescJobTitle" 
                 TextWrapping="Wrap" Text="{Binding Path=JobTitle}"/>-->

                <TextBox Text="Job title"
                    Grid.Row="1" 
                    FontStyle="Italic"
                    Foreground="LightGray"
                    Focusable="False">
                </TextBox>
                <TextBox x:Name="JobTitleinput"
                    Grid.Row="1" 
                    Text="{Binding Path=JobTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Focusable="True">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Opacity"
                          Value="1" />
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused"
                                         Value="False" />
                                        <Condition Property="Text"
                                         Value="" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity"
                                  Value="0" />
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <!--<Label Grid.Row="2" Grid.Column="0">Description</Label>
        <TextBox Grid.Row="2" Grid.Column="1" x:Name="JobDescJobDescription"
                 TextWrapping="Wrap" Text="{Binding Path=JobDescription}"/>-->

                <TextBox Text="Job description"
                    Grid.Row="2" 
                    FontStyle="Italic"
                    Foreground="LightGray"
                    Focusable="False">
                </TextBox>
                <TextBox x:Name="JobDescriptionInput"
                    Grid.Row="2" 
                    Text="{Binding Path=JobDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Focusable="True">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Opacity"
                          Value="1" />
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused"
                                         Value="False" />
                                        <Condition Property="Text"
                                         Value="" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity"
                                  Value="0" />
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <!--<Label Grid.Row="3">Employee</Label>-->

                <ComboBox x:Name="JobDescJobEmployee"
                    Grid.Row="3">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                        <Label Content="{Binding  Path=EmployeeName}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Text="... Select Employee ..." 
                    Grid.Row="3"
                    Visibility="{Binding SelectedItem, ElementName=JobDescJobEmployee, Converter={StaticResource NullToVisibilityConverter}}"
                    IsHitTestVisible="False" />


                
                <ListBox x:Name="AssignedEmployees"
                         MouseRightButtonUp="AssignedEmployees_MouseRightButtonUp"
                         Grid.Row="4" 
                         ScrollViewer.CanContentScroll="True">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Path=EmployeeName}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>




                <!--
        Date Submitted 
        -->
                <!--<Label Grid.Row="5">Date Submitted</Label>
        <Label Grid.Row="5" Grid.Column="1" Content="{Binding Path=Time, Mode=TwoWay}"/>-->

                <!--
        This Field should be gotten from the current supervisor
        The binding path will have to be altered to complie with the Employee class
        -->
                <!--<Label Grid.Row="6" Content="Supervisor"/>
        <Label  Grid.Row="6" Grid.Column="1" x:Name="JobDescSupervisor"
                 Content="{Binding Source=JobTest, Path=SupereeName, Mode=TwoWay}"/>-->

                <!--
        Priority is specified by supervisor on a list of high low and medium
        -->
                <!--<Label Grid.Row="7">Priority</Label>-->

            <ComboBox x:Name="JobDescPriority" 
                      Grid.Row="6" Grid.Column="0" 
                      ItemsSource="{Binding Source={StaticResource dataFromEnum}}"/>
            <TextBlock Text="... Select Priority ..."
                    Grid.Row="6" Grid.Column="0"
                    Visibility="{Binding SelectedItem, 
                    ElementName=JobDescPriority, 
                    Converter={StaticResource NullToVisibilityConverter}}"
                    IsHitTestVisible="False"/>

                <!--
        Button Functionality: 
        Add job will save and create a new Job into a collection of jobs
        Edit job will take the selected job and allow only the alterable parts to change
        -->
                <Button x:Name="AddJob"
                        Content="Add Job"
                        VerticalAlignment="Bottom"
                        Margin="10,5,10,0"
                        Grid.Row="7" Grid.Column="0"
                        Click="AddJob_Click"/>
                
                <Button x:Name="AddEmployee"
                        Content="Add Employee"
                        Grid.Row="5" Grid.Column="0"
                        Click="AddEmployee_Click"/>
            </Grid>
        </Border>
</UserControl>
